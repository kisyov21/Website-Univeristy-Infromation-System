@model WebSite.ViewModels.ScheduleViewModel.ScheduleViewModel

@{
    ViewBag.Title = "Edit event";
}

<h2 class="fontTU">Edit event</h2>


@using (Html.BeginForm("Edit", "ScheduleData", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)

        <div class="form-group">
            @Html.LabelFor(model => model.start, "Start date", htmlAttributes: new { @class = "control-label col-md-2 fontTU" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.start, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.start, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.end,"End date", htmlAttributes: new { @class = "control-label col-md-2 fontTU" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.end, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.end, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Type,"Event type", htmlAttributes: new { @class = "control-label col-md-2 fontTU" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Type, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Room, htmlAttributes: new { @class = "control-label col-md-2 fontTU" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Room, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Room, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Topic, htmlAttributes: new { @class = "control-label col-md-2 fontTU" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Topic, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Topic, "", new { @class = "text-danger" })
            </div>
        </div>
        @if(Model.FilePath == null || Model.FilePath=="") 
        {
        <div class="form-group">
            <label for="uploadFile" class="col-sm-2 control-label fontTU">File to upload:</label>
            <div class="col-md-5">
                <input type="file" class="form-control" id="file" name="file" data-validation="required" />
            </div>
        </div>
        }
        else
        {
            <div class="form-group">
                <label class="control-label col-md-2 fontTU">File name:</label>
                <div class="col-md-5">
                    <label style="float:left; padding-top:7px">@Model.FilePath</label>
                </div>
            </div>
            <div class="form-group">
                <label class="control-label col-md-2 fontTU"></label>
                <div class="col-md-10">
                    <button type="button" class="btn btn-danger delete" value="@Model.ID">Delete file</button>

                </div>
            </div>

        }
        <div class="form-group">
            @Html.LabelFor(model => model.DisciplineID, "Disciplines", htmlAttributes: new { @class = "control-label col-md-2 fontTU" })
            <div class="col-md-10">
                @Html.DropDownList("DisciplineID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.DisciplineID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save event" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    <button type="button" class="btn btn-default" aria-label="Left Align" onclick="location.href='@Url.Action("Index", "ScheduleData")'">
        <span class="glyphicon glyphicon-arrow-left" aria-hidden="true"></span>&nbsp;&nbsp;Back
    </button>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $('.delete').click(function () {
            var fileID = $('.delete').attr('value');
            deleteFile(fileID);
        });
        
        function deleteFile(fileId) {
            $.ajax({
                url: "/ScheduleData/DeleteFile",
                contentType: "application/json; charset=utf-8",
                type: 'GET',
                data: { eventID: fileId },
                dataType: "json",
                success: function (data) {
                    if (data) {
                        bootbox.alert('The file was deleted successfully');
                        location.reload();
                    }
                },
                error: function (data) {
                    bootbox.alert('Opps..the file was not deleted successfully');
                },
                fail: function (data) {
                    bootbox.alert('Opps..the file was not deleted successfully');
                }
            });

        }
    </script>
}
